{"ast":null,"code":"import { ADD_ITEM, REMOVE_ITEM } from 'Actions';\nimport { initialState } from 'initialState';\nlet toUseState = {};\n\nconst Reducers = (state = initialState, action) => {\n  toUseState = state;\n\n  switch (action.type) {\n    case ADD_ITEM:\n      toUseState['cart'].push(action.payload.checkout);\n      console.log(toUseState['cart']);\n\n      for (let i = 0; i < toUseState.product.sizees.length; i++) {\n        if (toUseState.product.sizes[i].id == action.payload.checkout.sizeId) {\n          for (let j = 0; j < toUseState.product.sizes[i].colors.length; j++) {\n            if (toUseState.product.sizes[i].colors[j].name == action.payload.checkout.colorId) {\n              toUseState.product.sizes[i].colors[j].quantity = toUseState.product.sizes[i].colors[j].quantity - action.payload.checkout.quantity;\n              break;\n            }\n          }\n\n          break;\n        }\n      }\n\n      return { ...toUseState\n      };\n\n    case REMOVE_ITEM:\n      toUseState['cart'].splice(action.payload.id - 1, 1);\n      console.log(action.payload.id);\n      console.log(toUseState['cart']);\n\n      for (let i = 0; i < toUseState.product.sizes.length; i++) {\n        if (toUseState.product.sizes[i].id == action.payload.size) {\n          for (let j = 0; j < toUseState.product.sizes[i].colors.length; j++) {\n            if (toUseState.product.sizes[i].colors[j].name == action.payload.color) {\n              toUseState.product.sizes[i].colors[j].quantity = toUseState.product.sizes[i].colors[j].quantity + action.payload.quantity;\n              console.log(toUseState.product.sizes);\n              break;\n            }\n          }\n\n          break;\n        }\n      }\n\n      console.log(toUseState);\n      return {\n        toUseState\n      };\n\n    default:\n      return toUseState;\n  }\n};\n\n_c = Reducers;\nexport default Reducers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducers\");","map":{"version":3,"sources":["/home/dev/Desktop/Training/React/dailyfashionpage/src/Reducers/index.js"],"names":["ADD_ITEM","REMOVE_ITEM","initialState","toUseState","Reducers","state","action","type","push","payload","checkout","console","log","i","product","sizees","length","sizes","id","sizeId","j","colors","name","colorId","quantity","splice","size","color"],"mappings":"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","sourcesContent":["import { ADD_ITEM, REMOVE_ITEM } from 'Actions'\n\nimport { initialState } from 'initialState'\nlet toUseState = {}\n\nconst Reducers = (state = initialState, action) => {\n  toUseState = state\n  switch (action.type) {\n    case ADD_ITEM:\n      toUseState['cart'].push(action.payload.checkout)\n      console.log(toUseState['cart'])\n      for (let i = 0; i < toUseState.product.sizees.length; i++) {\n        if (toUseState.product.sizes[i].id == action.payload.checkout.sizeId) {\n          for (let j = 0; j < toUseState.product.sizes[i].colors.length; j++) {\n            if (toUseState.product.sizes[i].colors[j].name == action.payload.checkout.colorId) {\n              toUseState.product.sizes[i].colors[j].quantity =\n                toUseState.product.sizes[i].colors[j].quantity - action.payload.checkout.quantity\n              break\n            }\n          }\n          break\n        }\n      }\n      return { ...toUseState }\n\n    case REMOVE_ITEM:\n      toUseState['cart'].splice(action.payload.id - 1, 1)\n      console.log(action.payload.id)\n      console.log(toUseState['cart'])\n      for (let i = 0; i < toUseState.product.sizes.length; i++) {\n        if (toUseState.product.sizes[i].id == action.payload.size) {\n          for (let j = 0; j < toUseState.product.sizes[i].colors.length; j++) {\n            if (toUseState.product.sizes[i].colors[j].name == action.payload.color) {\n              toUseState.product.sizes[i].colors[j].quantity =\n                toUseState.product.sizes[i].colors[j].quantity + action.payload.quantity\n              console.log(toUseState.product.sizes)\n              break\n            }\n          }\n          break\n        }\n      }\n      console.log(toUseState)\n      return { toUseState }\n    default:\n      return toUseState\n  }\n}\nexport default Reducers\n"]},"metadata":{},"sourceType":"module"}